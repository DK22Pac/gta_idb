{
    "name": "eEntityFlags",
    "module": "CEntity",
    "scope": "",
    "width": 1,
    "isClass": false,
    "isHexademical": false,
    "isSigned": false,
    "isBitfield": false,
    "comment": "",
    "members": [
        {
            "name": "UsesCollision",
            "value": 1,
            "comment": "does entity use collision"
        },
        {
            "name": "CollisionProcessed",
            "value": 2,
            "comment": "has object been processed by a ProcessEntityCollision function"
        },
        {
            "name": "IsStatic",
            "value": 3,
            "comment": "is entity static"
        },
        {
            "name": "HasContacted",
            "value": 4,
            "comment": "has entity processed some contact forces"
        },
        {
            "name": "PedPhysics",
            "value": 5
        },
        {
            "name": "IsStuck",
            "value": 6,
            "comment": "is entity stuck"
        },
        {
            "name": "IsInSafePosition",
            "value": 7,
            "comment": "is entity in a collision free safe position"
        },
        {
            "name": "UseCollisionRecords",
            "value": 8
        },
        {
            "name": "WasPostponed",
            "value": 9,
            "comment": "was entity control processing postponed"
        },
        {
            "name": "ExplosionProof",
            "value": 10
        },
        {
            "name": "IsVisible",
            "value": 11,
            "comment": "is the entity visible"
        },
        {
            "name": "HasCollided",
            "value": 12
        },
        {
            "name": "RenderScorched",
            "value": 13
        },
        {
            "name": "HasBlip",
            "value": 14
        },
        {
            "name": "IsBIGBuilding",
            "value": 15,
            "comment": "set if this entity is a big building"
        },
        {
            "name": "RenderDamaged",
            "value": 16,
            "comment": "use damaged LOD models for objects with applicable damage"
        },
        {
            "name": "BulletProof",
            "value": 17
        },
        {
            "name": "FireProof",
            "value": 18
        },
        {
            "name": "CollisionProof",
            "value": 19
        },
        {
            "name": "MeleeProof",
            "value": 20
        },
        {
            "name": "OnlyDamagedByPlayer",
            "value": 21
        },
        {
            "name": "StreamingDontDelete",
            "value": 22,
            "comment": "dont let the streaming remove this"
        },
        {
            "name": "ZoneCulled",
            "value": 23
        },
        {
            "name": "ZoneCulled2",
            "value": 24,
            "comment": "only treadables+10m"
        },
        {
            "name": "RemoveFromWorld",
            "value": 25,
            "comment": "remove this entity next time it should be processed"
        },
        {
            "name": "HasHitWall",
            "value": 26,
            "comment": "has collided with a building (changes subsequent collisions)"
        },
        {
            "name": "ImBeingRendered",
            "value": 27,
            "comment": "don't delete me because I'm being rendered"
        },
        {
            "name": "TouchingWater",
            "value": 28,
            "comment": "used by cBuoyancy::ProcessBuoyancy"
        },
        {
            "name": "IsSubway",
            "value": 29,
            "comment": "set when subway, but maybe different meaning?"
        },
        {
            "name": "DrawLast",
            "value": 30,
            "comment": "draw object last"
        },
        {
            "name": "NoBrightHeadLights",
            "value": 31
        },
        {
            "name": "DoNotRender",
            "value": 32
        },
        {
            "name": "DistanceFade",
            "value": 33,
            "comment": "fade entity because it is far away"
        },
        {
            "name": "Flag34",
            "value": 34
        }
    ]
}